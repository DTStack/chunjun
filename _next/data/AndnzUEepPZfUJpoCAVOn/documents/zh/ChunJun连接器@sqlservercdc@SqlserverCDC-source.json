{"pageProps":{"content":"\n              <a id=\"SqlserverCDC Source\" style='display: block; height: 35px;'></a>\n              <h1>\n                SqlserverCDC Source\n              </h1>\n            \n              <a id=\"一、介绍\" style='display: block; height: 35px;'></a>\n              <h2>\n                一、介绍\n              </h2>\n            <p>Sqlservercdc插件支持配置监听表名称以及读取起点读取日志数据。SQLservercdc在checkpoint时保存当前消费的lsn，因此支持续跑。</p>\n\n              <a id=\"二、支持版本\" style='display: block; height: 35px;'></a>\n              <h2>\n                二、支持版本\n              </h2>\n            <p>SqlServer 2012、2014、2016、2017、2019单机版</p>\n\n              <a id=\"三、数据库配置\" style='display: block; height: 35px;'></a>\n              <h2>\n                三、数据库配置\n              </h2>\n            <p><a href=\"SqlServer%E9%85%8D%E7%BD%AECDC.md\">SqlserverCDC配置</a></p>\n\n              <a id=\"四、SqlserverCDC原理\" style='display: block; height: 35px;'></a>\n              <h2>\n                四、SqlserverCDC原理\n              </h2>\n            <p>[SqlserverCDC原理](SqlServer CDC实时采集原理.md)</p>\n\n              <a id=\"五、插件名称\" style='display: block; height: 35px;'></a>\n              <h2>\n                五、插件名称\n              </h2>\n            <table>\n<thead>\n<tr>\n<th>Sync</th>\n<th>sqlservercdcreader、sqlservercdcsource</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SQL</td>\n<td>sqlservercdc-x</td>\n</tr>\n</tbody></table>\n\n              <a id=\"\" style='display: block; height: 35px;'></a>\n              <h2>\n                \n              </h2>\n            \n              <a id=\"六、参数说明\" style='display: block; height: 35px;'></a>\n              <h2>\n                六、参数说明\n              </h2>\n            \n              <a id=\"1、Sync\" style='display: block; height: 35px;'></a>\n              <h3>\n                1、Sync\n              </h3>\n            <ul>\n<li><p><strong>url</strong></p>\n<ul>\n<li>描述：sqlserver数据库的JDBC URL链接</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>username</strong></p>\n<ul>\n<li>描述：用户名</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>password</strong></p>\n<ul>\n<li>描述：密码</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>tableList</strong></p>\n<ul>\n<li>描述： 需要监听的表，如：[&quot;schema1.table1&quot;,&quot;schema1.table2&quot;]</li>\n<li>必选：是</li>\n<li>字段类型：数组</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>splitUpdate</strong></p>\n<ul>\n<li>描述：当数据更新类型为update时，是否将update拆分为两条数据，具体见【六、数据结构说明】</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li><p><strong>cat</strong></p>\n<ul>\n<li>描述：需要监听的操作数据操作类型，有UPDATE,INSERT,DELETE三种可选，大小写不敏感，多个以,分割</li>\n<li>必选：否</li>\n<li>字段类型：String</li>\n<li>默认值：UPDATE,INSERT,DELETE</li>\n</ul>\n</li>\n<li><p><strong>lsn</strong></p>\n<ul>\n<li>描述： 要读取SqlServer CDC日志序列号的开始位置</li>\n<li>必选： 否</li>\n<li>字段类型：String(00000032:00002038:0005)</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>pollInterval</strong></p>\n<ul>\n<li>描述： 监听拉取SqlServer CDC数据库间隔时间,该值越小，采集延迟时间越小，给数据库的访问压力越大</li>\n<li>必选：否</li>\n<li>字段类型：long(单位毫秒)</li>\n<li>默认值：1000</li>\n</ul>\n</li>\n<li><p><strong>pavingData</strong></p>\n<ul>\n<li>描述：是否将解析出的json数据拍平，具体见【七、数据结构说明】</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：false</li>\n</ul>\n</li>\n</ul>\n\n              <a id=\"2、SQL\" style='display: block; height: 35px;'></a>\n              <h3>\n                2、SQL\n              </h3>\n            <ul>\n<li><p><strong>url</strong></p>\n<ul>\n<li>描述：sqlserver数据库的JDBC URL链接</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>username</strong></p>\n<ul>\n<li>描述：用户名</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>password</strong></p>\n<ul>\n<li>描述：密码</li>\n<li>必选：是</li>\n<li>参数类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>table</strong></p>\n<ul>\n<li>描述：需要解析的数据表。</li>\n<li>注意：SQL任务只支持监听单张表，且数据格式为schema.table</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>cat</strong></p>\n<ul>\n<li>描述：需要监听的操作数据操作类型，有UPDATE,INSERT,DELETE三种可选，大小写不敏感，多个以,分割</li>\n<li>必选：否</li>\n<li>字段类型：String</li>\n<li>默认值：UPDATE,INSERT,DELETE</li>\n</ul>\n</li>\n<li><p><strong>lsn</strong></p>\n<ul>\n<li>描述： 要读取SqlServer CDC日志序列号的开始位置</li>\n<li>必选： 否</li>\n<li>字段类型：String(00000032:00002038:0005)</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>poll-interval</strong></p>\n<ul>\n<li>描述： 监听拉取SqlServer CDC数据库间隔时间,该值越小，采集延迟时间越小，给数据库的访问压力越大</li>\n<li>必选：否</li>\n<li>字段类型：long(单位毫秒)</li>\n<li>默认值：1000</li>\n</ul>\n</li>\n</ul>\n\n              <a id=\"七、数据结构\" style='display: block; height: 35px;'></a>\n              <h2>\n                七、数据结构\n              </h2>\n            <p>在2020-01-01 12:30:00(时间戳：1577853000000)执行：</p>\n<pre><code class=\"language-sql\">INSERT INTO `tudou`.`kudu`(`id`, `user_id`, `name`)\nVALUES (<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &#x27;a&#x27;)<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>在2020-01-01 12:31:00(时间戳：1577853060000)执行：</p>\n<pre><code class=\"language-sql\">DELETE\nFROM `tudou`.`kudu`\nWHERE `id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `user_id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `name` = &#x27;a&#x27;<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>在2020-01-01 12:32:00(时间戳：1577853180000)执行：</p>\n<pre><code class=\"language-sql\">UPDATE `tudou`.`kudu`\nSET `id`      = <span class=\"hljs-number\">2</span>,\n    `user_id` = <span class=\"hljs-number\">2</span>,\n    `name`    = &#x27;b&#x27;\nWHERE `id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `user_id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `name` = &#x27;a&#x27;<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>1、pavingData = true, splitUpdate = false RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, &quot;b&quot;]\n</code></pre>\n<p>2、pavingData = false, splitUpdate = false RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, <span class=\"hljs-keyword\">null</span>]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, {&quot;id&quot;:<span class=\"hljs-number\">2</span>, &quot;user_id&quot;:<span class=\"hljs-number\">2</span>, &quot;name&quot;:&quot;b&quot;}]\n</code></pre>\n<p>3、pavingData = true, splitUpdate = true RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>]\n\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_BEFORE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_AFTER&quot;, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, &quot;b&quot;]\n</code></pre>\n<p>4、pavingData = false, splitUpdate = true RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, <span class=\"hljs-keyword\">null</span>]\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_BEFORE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_AFTER&quot;, {&quot;id&quot;:<span class=\"hljs-number\">2</span>, &quot;user_id&quot;:<span class=\"hljs-number\">2</span>, &quot;name&quot;:&quot;b&quot;}]\n</code></pre>\n<ul>\n<li>type：变更类型，INSERT，UPDATE、DELETE</li>\n<li>opTime：数据库中SQL的执行时间</li>\n<li>ts：自增ID，不重复，可用于排序，解码后为ChunJun的事件时间，解码规则如下:</li>\n</ul>\n<pre><code class=\"language-java\">long id<span class=\"hljs-operator\">=</span>Long.parseLong(<span class=\"hljs-string\">&quot;6760525407742726144&quot;</span>)<span class=\"hljs-comment\">;</span>\n        long res<span class=\"hljs-operator\">=</span>id&gt;&gt;<span class=\"hljs-number\">22</span><span class=\"hljs-comment\">;</span>\n        DateFormat sdf<span class=\"hljs-operator\">=</span>new SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>)<span class=\"hljs-comment\">;</span>\n        System.out.println(sdf.format(res))<span class=\"hljs-comment\">;        //2021-01-28 19:54:21</span>\n</code></pre>\n\n              <a id=\"八、数据类型\" style='display: block; height: 35px;'></a>\n              <h2>\n                八、数据类型\n              </h2>\n            <table>\n<thead>\n<tr>\n<th>是否支持</th>\n<th>数据类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>支持</td>\n<td>BIT, TINYINT24, INT, INTEGER, FLOAT, DOUBLE, REAL, LONG, BIGINT, DECIMAL, NUMERIC, BINARY, VARBINARY, DATE, TIME, TIMESTAMP, DATETIME, DATETIME2, SMALLDATETIME, CHAR, VARCHAR, NCHAR, NVARCHAR, TEXT</td>\n</tr>\n<tr>\n<td>不支持</td>\n<td>ROWVERSION, UNIQUEIDENTIFIER, CURSOR, TABLE, SQL_VARIANT</td>\n</tr>\n</tbody></table>\n\n              <a id=\"九、脚本示例\" style='display: block; height: 35px;'></a>\n              <h2>\n                九、脚本示例\n              </h2>\n            <p>见项目内<code>chunjun-examples</code>文件夹。</p>\n","tree":[{"label":"ChunJun通用配置详解","category":"file"},{"label":"快速开始","category":"file"},{"label":"ChunJun拓展数据格式","children":[{"label":"protobuf-x","path":"protobuf-x","category":"file"}],"category":"dir"},{"label":"ChunJun连接器","children":[{"label":"binlog","category":"dir","children":[{"label":"binlog-source","path":"binlog-source","category":"file"}]},{"label":"clickhouse","category":"dir","children":[{"label":"clickhouse-lookup","path":"clickhouse-lookup","category":"file"},{"label":"clickhouse-sink","path":"clickhouse-sink","category":"file"},{"label":"clickhouse-source","path":"clickhouse-source","category":"file"}]},{"label":"db2","category":"dir","children":[{"label":"db2-lookup","path":"db2-lookup","category":"file"},{"label":"db2-sink","path":"db2-sink","category":"file"},{"label":"db2-source","path":"db2-source","category":"file"}]},{"label":"dm","category":"dir","children":[{"label":"dm-sink","path":"dm-sink","category":"file"},{"label":"dm-source","path":"dm-source","category":"file"}]},{"label":"doris","category":"dir","children":[{"label":"dorisbatch-sink","path":"dorisbatch-sink","category":"file"}]},{"label":"elasticsearch","category":"dir","children":[{"label":"es7-lookup","path":"es7-lookup","category":"file"},{"label":"es7-sink","path":"es7-sink","category":"file"},{"label":"es7-source","path":"es7-source","category":"file"}]},{"label":"gbase","category":"dir","children":[{"label":"gbase-lookup","path":"gbase-lookup","category":"file"},{"label":"gbase-sink","path":"gbase-sink","category":"file"},{"label":"gbase-source","path":"gbase-source","category":"file"}]},{"label":"greenplum","category":"dir","children":[{"label":"greenplum-sink","path":"greenplum-sink","category":"file"},{"label":"greenplum-source","path":"greenplum-source","category":"file"}]},{"label":"hbase","category":"dir","children":[{"label":"hbase-lookup","path":"hbase-lookup","category":"file"},{"label":"hbase-sink","path":"hbase-sink","category":"file"},{"label":"hbase-source","path":"hbase-source","category":"file"}]},{"label":"hdfs","category":"dir","children":[{"label":"hdfs-sink","path":"hdfs-sink","category":"file"},{"label":"hdfs-source","path":"hdfs-source","category":"file"}]},{"label":"hive","category":"dir","children":[{"label":"hive-lookup","path":"hive-lookup","category":"file"},{"label":"hive-sink","path":"hive-sink","category":"file"}]},{"label":"influxdb","category":"dir","children":[{"label":"influxdb-sink","path":"influxdb-sink","category":"file"},{"label":"influxdb-source","path":"influxdb-source","category":"file"}]},{"label":"kafka","category":"dir","children":[{"label":"kafka-sink","path":"kafka-sink","category":"file"},{"label":"kafka-source","path":"kafka-source","category":"file"}]},{"label":"kingbase","category":"dir","children":[{"label":"kingbase-sink","path":"kingbase-sink","category":"file"},{"label":"kingbase-source","path":"kingbase-source","category":"file"}]},{"label":"kudu","category":"dir","children":[{"label":"kudu-lookup","path":"kudu-lookup","category":"file"},{"label":"kudu-sink","path":"kudu-sink","category":"file"},{"label":"kudu-source","path":"kudu-source","category":"file"}]},{"label":"logminer","category":"dir","children":[{"label":"LogMiner-source","path":"LogMiner-source","category":"file"},{"label":"LogMiner原理","path":"LogMiner原理","category":"file"},{"label":"LogMiner配置","path":"LogMiner配置","category":"file"}]},{"label":"mongodb","category":"dir","children":[{"label":"mongodb-lookup","path":"mongodb-lookup","category":"file"},{"label":"mongodb-sink","path":"mongodb-sink","category":"file"},{"label":"mongodb-source","path":"mongodb-source","category":"file"}]},{"label":"mysql","category":"dir","children":[{"label":"mysql-lookup","path":"mysql-lookup","category":"file"},{"label":"mysql-sink","path":"mysql-sink","category":"file"},{"label":"mysql-source","path":"mysql-source","category":"file"}]},{"label":"oracle","category":"dir","children":[{"label":"oracle-lookup","path":"oracle-lookup","category":"file"},{"label":"oracle-sink","path":"oracle-sink","category":"file"},{"label":"oracle-source","path":"oracle-source","category":"file"}]},{"label":"pgwal","category":"dir","children":[{"label":"Postgres-CDC","path":"Postgres-CDC","category":"file"}]},{"label":"postgresql","category":"dir","children":[{"label":"postgres-lookup","path":"postgres-lookup","category":"file"},{"label":"postgres-sink","path":"postgres-sink","category":"file"},{"label":"postgres-source","path":"postgres-source","category":"file"}]},{"label":"rocketmq","category":"dir","children":[{"label":"rocketmq-source","path":"rocketmq-source","category":"file"}]},{"label":"saphana","category":"dir","children":[{"label":"saphana-sink","path":"saphana-sink","category":"file"},{"label":"saphana-source","path":"saphana-source","category":"file"}]},{"label":"sqlserver","category":"dir","children":[{"label":"sqlserver-lookup","path":"sqlserver-lookup","category":"file"},{"label":"sqlserver-sink","path":"sqlserver-sink","category":"file"},{"label":"sqlserver-source","path":"sqlserver-source","category":"file"}]},{"label":"sqlservercdc","category":"dir","children":[{"label":"SqlServer CDC实时采集原理","path":"SqlServer CDC实时采集原理","category":"file"},{"label":"SqlServer配置CDC","path":"SqlServer配置CDC","category":"file"},{"label":"SqlserverCDC-source","path":"SqlserverCDC-source","category":"file"}]}],"category":"dir"},{"label":"开发者指南","children":[{"label":"如何提交一个优秀的PR","path":"如何提交一个优秀的PR","category":"file"},{"label":"如何自定义插件","path":"如何自定义插件","category":"file"}],"category":"dir"},{"label":"拓展功能","children":[{"label":"增量同步介绍","path":"增量同步介绍","category":"file"},{"label":"断点续传介绍","path":"断点续传介绍","category":"file"},{"label":"脏数据插件设计","path":"脏数据插件设计","category":"file"}],"category":"dir"}],"toc":[{"text":"SqlserverCDC Source","level":1,"id":"8c2d91dd-16e6-43d9-8d63-04b296889e34"},{"text":"一、介绍","level":2,"id":"f1ef68db-542f-4990-84c7-cc84beee626f"},{"text":"二、支持版本","level":2,"id":"c9a09661-2f4d-48dc-bbd4-6ef50232fe74"},{"text":"三、数据库配置","level":2,"id":"31c3fdf6-2577-4f67-af6c-1f3c8c92cdf2"},{"text":"四、SqlserverCDC原理","level":2,"id":"133c12e0-9004-403e-9160-132e856ad8f0"},{"text":"五、插件名称","level":2,"id":"b81d7d76-5e9d-41e0-aae0-8389d2958c71"},{"text":"","level":2,"id":"c2b7f807-9cf6-474f-897d-129747af77e7"},{"text":"六、参数说明","level":2,"id":"724fb40e-b62a-49f6-90ab-0f27e843df2f"},{"text":"1、Sync","level":3,"id":"24135daf-e316-4905-8f6d-1a4cbbc6d652"},{"text":"2、SQL","level":3,"id":"ade01a78-fcee-49ae-a24a-555195ea7807"},{"text":"七、数据结构","level":2,"id":"20aa0f7e-64e8-4753-be75-887a0f5152a7"},{"text":"八、数据类型","level":2,"id":"efa53517-0151-4877-9b0a-b1f6dc1e79ed"},{"text":"九、脚本示例","level":2,"id":"3f3dbba3-f231-4f98-a0d7-adc469e200a8"}]},"__N_SSG":true}