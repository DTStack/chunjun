{"pageProps":{"content":"\n              <a id=\"Binlog Source\" style='display: block; height: 35px;'></a>\n              <h1>\n                Binlog Source\n              </h1>\n            <!-- TOC -->\n\n\n              <a id=\"一、介绍\" style='display: block; height: 35px;'></a>\n              <h2>\n                一、介绍\n              </h2>\n            <p>Binlog插件使用Canal组件实时地从MySQL中捕获变更数据。source同步插件支持数据还原，支持DDL的变更。</p>\n\n              <a id=\"二、支持版本\" style='display: block; height: 35px;'></a>\n              <h2>\n                二、支持版本\n              </h2>\n            <p>MySQL 5.1.5及以上、TiDB 3.0.10之后</p>\n\n              <a id=\"三、插件名称\" style='display: block; height: 35px;'></a>\n              <h2>\n                三、插件名称\n              </h2>\n            <table>\n<thead>\n<tr>\n<th>Sync</th>\n<th>binlogsource、binlogreader</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SQL</td>\n<td>binlog-x</td>\n</tr>\n</tbody></table>\n\n              <a id=\"四、数据库配置\" style='display: block; height: 35px;'></a>\n              <h2>\n                四、数据库配置\n              </h2>\n            \n              <a id=\"1、修改配置文件\" style='display: block; height: 35px;'></a>\n              <h3>\n                1、修改配置文件\n              </h3>\n            <p>binlog_format需要修改为 ROW 格式，在/etc/my.cnf文件里[mysqld]下添加下列配置</p>\n<pre><code class=\"language-sql\">server_id\n=<span class=\"hljs-number\">109</span>\nlog_bin = /<span class=\"hljs-built_in\">var</span>/lib/mysql/mysql-bin\nbinlog_format = <span class=\"hljs-built_in\">ROW</span>\nexpire_logs_days = <span class=\"hljs-number\">30</span>\n</code></pre>\n\n              <a id=\"2、添加权限\" style='display: block; height: 35px;'></a>\n              <h3>\n                2、添加权限\n              </h3>\n            <p>MySQL Binlog权限需要三个权限 SELECT, REPLICATION SLAVE, REPLICATION CLIENT</p>\n<pre><code class=\"language-sql\"><span class=\"hljs-keyword\">GRANT</span>\n<span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">REPLICATION</span> SLAVE, <span class=\"hljs-keyword\">REPLICATION</span> CLIENT\n<span class=\"hljs-keyword\">ON</span> *.* <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;canal&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;canal&#x27;</span>;\n</code></pre>\n<ul>\n<li>缺乏SELECT权限时，报错为</li>\n</ul>\n<pre><code class=\"language-text\">com<span class=\"hljs-selector-class\">.mysql</span><span class=\"hljs-selector-class\">.jdbc</span><span class=\"hljs-selector-class\">.exceptions</span><span class=\"hljs-selector-class\">.jdbc4</span><span class=\"hljs-selector-class\">.MySQLSyntaxErrorException</span>:\nAccess denied <span class=\"hljs-keyword\">for</span> user <span class=\"hljs-string\">&#x27;canal&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> to database <span class=\"hljs-string\">&#x27;binlog&#x27;</span>\n</code></pre>\n<ul>\n<li>缺乏REPLICATION SLAVE权限时，报错为</li>\n</ul>\n<pre><code class=\"language-text\">java.io.IOException: \n<span class=\"hljs-built_in\">Error</span> When doing Register slave:ErrorPacket [<span class=\"hljs-attribute\">errorNumber</span>=1045, <span class=\"hljs-attribute\">fieldCount</span>=-1, <span class=\"hljs-attribute\">message</span>=Access denied <span class=\"hljs-keyword\">for</span><span class=\"hljs-built_in\"> user </span><span class=\"hljs-string\">&#x27;canal&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>\n</code></pre>\n<ul>\n<li>缺乏REPLICATION CLIENT权限时，报错为</li>\n</ul>\n<pre><code class=\"language-text\">com<span class=\"hljs-selector-class\">.mysql</span><span class=\"hljs-selector-class\">.jdbc</span><span class=\"hljs-selector-class\">.exceptions</span><span class=\"hljs-selector-class\">.jdbc4</span><span class=\"hljs-selector-class\">.MySQLSyntaxErrorException</span>: \nAccess denied; you need (at least one of) the SUPER, REPLICATION CLIENT <span class=\"hljs-built_in\">privilege</span>(s) for this operation\n</code></pre>\n<p>Binlog为什么需要这些权限：</p>\n<ul>\n<li>Select权限代表允许从表中查看数据</li>\n<li>Replication client权限代表允许执行show master status,show slave status,show binary logs命令</li>\n<li>Replication slave权限代表允许slave主机通过此用户连接master以便建立主从 复制关系</li>\n</ul>\n\n              <a id=\"五、参数说明\" style='display: block; height: 35px;'></a>\n              <h2>\n                五、参数说明\n              </h2>\n            \n              <a id=\"1、Sync\" style='display: block; height: 35px;'></a>\n              <h3>\n                1、Sync\n              </h3>\n            <ul>\n<li>\n              <a id=\"<strong>jdbcUrl</strong>\" style='display: block; height: 35px;'></a>\n              <h2>\n                <strong>jdbcUrl</strong>\n              </h2>\n            <p>描述：MySQL数据库的jdbc连接字符串，参考文档：<a href=\"http://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html\">Mysql官方文档</a></p>\n<ul>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>username</strong></p>\n<ul>\n<li>描述：数据源的用户名</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>password</strong></p>\n<ul>\n<li>描述：数据源指定用户名的密码</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>host</strong></p>\n<ul>\n<li>描述：启动MySQL slave的机器ip</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>port</strong></p>\n<ul>\n<li>描述：启动MySQL slave的端口</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：3306</li>\n</ul>\n</li>\n<li><p><strong>table</strong></p>\n<ul>\n<li>描述：需要解析的数据表。</li>\n<li>注意：指定此参数后filter参数将无效,table和filter都为空，监听jdbcUrl里的schema下所有表</li>\n<li>必选：否</li>\n<li>字段类型：list&lt;string&gt;</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>filter</strong></p>\n<ul>\n<li>描述：过滤表名的Perl正则表达式</li>\n<li>注意：table和filter都为空，监听jdbcUrl里的schema下所有表</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n<li>例子：<ul>\n<li>所有表：<code>.*</code> or <code>.*\\\\..*</code></li>\n<li>canal schema下所有表： <code>canal\\\\..*</code></li>\n<li>canal下的以canal打头的表：<code>canal\\\\.canal.*</code></li>\n<li>canal schema下的一张表：<code>canal.test1</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>cat</strong></p>\n<ul>\n<li>描述：需要解析的数据更新类型，包括insert、update、delete三种</li>\n<li>注意：以英文逗号分割的格式填写。如果为空，解析所有数据更新类型</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>start</strong></p>\n<ul>\n<li>描述：要读取的binlog文件的开始位置</li>\n<li>注意：为空，则从当前position处消费，timestamp的优先级高于 journal-name+position</li>\n<li>参数：<ul>\n<li>timestamp：时间戳，采集起点从指定的时间戳处消费；</li>\n<li>journal-name：文件名，采集起点从指定文件的起始处消费；</li>\n<li>position：文件的指定位置，采集起点从指定文件的指定位置处消费</li>\n</ul>\n</li>\n<li>字段类型：map</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>pavingData</strong></p>\n<ul>\n<li>描述：是否将解析出的json数据拍平，具体见<a href=\"#%E5%85%AD%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\">六、数据结构</a></li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>splitUpdate</strong></p>\n<ul>\n<li>描述：当数据更新类型为update时，是否将update拆分为两条数据，具体见<a href=\"#%E5%85%AD%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\">六、数据结构</a></li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li><p><strong>timestampFormat</strong></p>\n<ul>\n<li>描述：指定输入输出所使用的timestamp格式，可选值：<code>SQL</code>、<code>ISO_8601</code></li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：SQL</li>\n</ul>\n</li>\n<li><p><strong>slaveId</strong></p>\n<ul>\n<li>描述：从服务器的ID</li>\n<li>注意：同一个MYSQL复制组内不能重复</li>\n<li>必选：否</li>\n<li>字段类型：long</li>\n<li>默认值：new Object().hashCode()</li>\n</ul>\n</li>\n<li><p><strong>connectionCharset</strong></p>\n<ul>\n<li>描述：编码信息</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：UTF-8</li>\n</ul>\n</li>\n<li><p><strong>detectingEnable</strong></p>\n<ul>\n<li>描述：是否开启心跳</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>detectingSQL</strong></p>\n<ul>\n<li>描述：心跳SQL</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：SELECT CURRENT_DATE</li>\n</ul>\n</li>\n<li><p><strong>enableTsdb</strong></p>\n<ul>\n<li>描述：是否开启时序表结构能力</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>bufferSize</strong></p>\n<ul>\n<li>描述：并发缓存大小</li>\n<li>注意：必须为2的幂</li>\n<li>必选：否</li>\n<li>默认值：1024</li>\n</ul>\n</li>\n<li><p><strong>parallel</strong></p>\n<ul>\n<li>描述：是否开启并行解析binlog日志</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>parallelThreadSize</strong></p>\n<ul>\n<li>描述：并行解析binlog日志线程数</li>\n<li>注意：只有 paraller 设置为true才生效</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：2</li>\n</ul>\n</li>\n<li><p><strong>isGTIDMode</strong></p>\n<ul>\n<li>描述：是否开启gtid模式</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li><p><strong>queryTimeOut</strong></p>\n<ul>\n<li>描述：通过TCP连接发送数据(在这里就是要执行的sql)后，等待响应的超时时间，单位毫秒</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：300000</li>\n</ul>\n</li>\n<li><p><strong>connectTimeOut</strong></p>\n<ul>\n<li>描述：数据库驱动(mysql-connector-java)与mysql服务器建立TCP连接的超时时间，单位毫秒</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：60000</li>\n</ul>\n</li>\n</ul>\n\n              <a id=\"2、SQL\" style='display: block; height: 35px;'></a>\n              <h3>\n                2、SQL\n              </h3>\n            <ul>\n<li><p><strong>url</strong></p>\n<ul>\n<li>描述：MySQL数据库的jdbc连接字符串，参考文档：<a href=\"http://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html\">Mysql官方文档</a></li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>username</strong></p>\n<ul>\n<li>描述：数据源的用户名</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>password</strong></p>\n<ul>\n<li>描述：数据源指定用户名的密码</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>host</strong></p>\n<ul>\n<li>描述：启动MySQL slave的机器ip</li>\n<li>必选：是</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>port</strong></p>\n<ul>\n<li>描述：启动MySQL slave的端口</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：3306</li>\n</ul>\n</li>\n<li><p><strong>table</strong></p>\n<ul>\n<li>描述：需要解析的数据表。</li>\n<li>注意：指定此参数后filter参数将无效，SQL任务只支持监听单张表</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>filter</strong></p>\n<ul>\n<li>描述：过滤表名的Perl正则表达式</li>\n<li>注意：SQL任务只支持监听单张表</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n<li>例子：canal schema下的一张表：<code>canal.test1</code></li>\n</ul>\n</li>\n<li><p><strong>cat</strong></p>\n<ul>\n<li>描述：需要解析的数据更新类型，包括insert、update、delete三种</li>\n<li>注意：以英文逗号分割的格式填写。如果为空，解析所有数据更新类型</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>timestamp</strong></p>\n<ul>\n<li>描述：要读取的binlog文件的开始位置，时间戳，采集起点从指定的时间戳处消费；</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>journal-name</strong></p>\n<ul>\n<li>描述：要读取的binlog文件的开始位置，文件名，采集起点从指定文件的起始处消费；</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>position</strong></p>\n<ul>\n<li>描述：要读取的binlog文件的开始位置，文件的指定位置，采集起点从指定文件的指定位置处消费</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：无</li>\n</ul>\n</li>\n<li><p><strong>connection-charset</strong></p>\n<ul>\n<li>描述：编码信息</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：UTF-8</li>\n</ul>\n</li>\n<li><p><strong>detecting-enable</strong></p>\n<ul>\n<li>描述：是否开启心跳</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>detecting-sql</strong></p>\n<ul>\n<li>描述：心跳SQL</li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：SELECT CURRENT_DATE</li>\n</ul>\n</li>\n<li><p><strong>enable-tsdb</strong></p>\n<ul>\n<li>描述：是否开启时序表结构能力</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>buffer-size</strong></p>\n<ul>\n<li>描述：并发缓存大小</li>\n<li>注意：必须为2的幂</li>\n<li>必选：否</li>\n<li>默认值：1024</li>\n</ul>\n</li>\n<li><p><strong>parallel</strong></p>\n<ul>\n<li>描述：是否开启并行解析binlog日志</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：true</li>\n</ul>\n</li>\n<li><p><strong>parallel-thread-size</strong></p>\n<ul>\n<li>描述：并行解析binlog日志线程数</li>\n<li>注意：只有 paraller 设置为true才生效</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：2</li>\n</ul>\n</li>\n<li><p><strong>is-gtid-mode</strong></p>\n<ul>\n<li>描述：是否开启gtid模式</li>\n<li>必选：否</li>\n<li>字段类型：boolean</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li><p><strong>query-time-out</strong></p>\n<ul>\n<li>描述：通过TCP连接发送数据(在这里就是要执行的sql)后，等待响应的超时时间，单位毫秒</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：300000</li>\n</ul>\n</li>\n<li><p><strong>connect-time-out</strong></p>\n<ul>\n<li>描述：数据库驱动(mysql-connector-java)与mysql服务器建立TCP连接的超时时间，单位毫秒</li>\n<li>必选：否</li>\n<li>字段类型：int</li>\n<li>默认值：60000</li>\n</ul>\n</li>\n<li><p><strong>timestamp-format.standard</strong></p>\n<ul>\n<li>描述：同Sync中的<code>timestampFormat</code>参数，指定输入输出所使用的timestamp格式，可选值：<code>SQL</code>、<code>ISO_8601</code></li>\n<li>必选：否</li>\n<li>字段类型：string</li>\n<li>默认值：SQL</li>\n</ul>\n</li>\n</ul>\n\n              <a id=\"六、数据结构\" style='display: block; height: 35px;'></a>\n              <h2>\n                六、数据结构\n              </h2>\n            <p>在2020-01-01 12:30:00(时间戳：1577853000000)执行：</p>\n<pre><code class=\"language-sql\">INSERT INTO `tudou`.`kudu`(`id`, `user_id`, `name`)\nVALUES (<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &#x27;a&#x27;)<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>在2020-01-01 12:31:00(时间戳：1577853060000)执行：</p>\n<pre><code class=\"language-sql\">DELETE\nFROM `tudou`.`kudu`\nWHERE `id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `user_id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `name` = &#x27;a&#x27;<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>在2020-01-01 12:32:00(时间戳：1577853180000)执行：</p>\n<pre><code class=\"language-sql\">UPDATE `tudou`.`kudu`\nSET `id`      = <span class=\"hljs-number\">2</span>,\n    `user_id` = <span class=\"hljs-number\">2</span>,\n    `name`    = &#x27;b&#x27;\nWHERE `id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `user_id` = <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-literal\">AND</span> `name` = &#x27;a&#x27;<span class=\"hljs-comment\">;</span>\n</code></pre>\n<p>1、pavingData = true, splitUpdate = false RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, &quot;b&quot;]\n</code></pre>\n<p>2、pavingData = false, splitUpdate = false RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, <span class=\"hljs-keyword\">null</span>]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, {&quot;id&quot;:<span class=\"hljs-number\">2</span>, &quot;user_id&quot;:<span class=\"hljs-number\">2</span>, &quot;name&quot;:&quot;b&quot;}]\n</code></pre>\n<p>3、pavingData = true, splitUpdate = true RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>, <span class=\"hljs-keyword\">null</span>]\n\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, before_id, before_user_id, before_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_BEFORE&quot;, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, &quot;a&quot;]\n\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, after_id, after_user_id, after_name\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_AFTER&quot;, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, &quot;b&quot;]\n</code></pre>\n<p>4、pavingData = false, splitUpdate = true RowData中的数据依次为：</p>\n<pre><code>//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853000000</span>, &quot;INSERT&quot;, <span class=\"hljs-keyword\">null</span>, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853060000</span>, &quot;DELETE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}, <span class=\"hljs-keyword\">null</span>]\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">before</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_BEFORE&quot;, {&quot;id&quot;:<span class=\"hljs-number\">1</span>, &quot;user_id&quot;:<span class=\"hljs-number\">1</span>, &quot;name&quot;:&quot;a&quot;}]\n//<span class=\"hljs-keyword\">schema</span>, <span class=\"hljs-keyword\">table</span>, ts, opTime, <span class=\"hljs-keyword\">type</span>, <span class=\"hljs-keyword\">after</span>\n[&quot;tudou&quot;, &quot;kudu&quot;, <span class=\"hljs-number\">6760525407742726144</span>, <span class=\"hljs-number\">1577853180000</span>, &quot;UPDATE_AFTER&quot;, {&quot;id&quot;:<span class=\"hljs-number\">2</span>, &quot;user_id&quot;:<span class=\"hljs-number\">2</span>, &quot;name&quot;:&quot;b&quot;}]\n</code></pre>\n<ul>\n<li>type：变更类型，INSERT，UPDATE、DELETE</li>\n<li>opTime：数据库中SQL的执行时间</li>\n<li>ts：自增ID，不重复，可用于排序，解码后为ChunJun的事件时间，解码规则如下:</li>\n</ul>\n<pre><code class=\"language-java\">long id<span class=\"hljs-operator\">=</span>Long.parseLong(<span class=\"hljs-string\">&quot;6760525407742726144&quot;</span>)<span class=\"hljs-comment\">;</span>\n        long res<span class=\"hljs-operator\">=</span>id&gt;&gt;<span class=\"hljs-number\">22</span><span class=\"hljs-comment\">;</span>\n        DateFormat sdf<span class=\"hljs-operator\">=</span>new SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>)<span class=\"hljs-comment\">;</span>\n        System.out.println(sdf.format(res))<span class=\"hljs-comment\">;        //2021-01-28 19:54:21</span>\n</code></pre>\n\n              <a id=\"七、数据类型\" style='display: block; height: 35px;'></a>\n              <h2>\n                七、数据类型\n              </h2>\n            <table>\n<thead>\n<tr>\n<th>支持</th>\n<th>BIT</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>TINYINT、SMALLINT、MEDIUMINT、INT、INT24、INTEGER、FLOAT、DOUBLE、REAL、LONG、BIGINT、DECIMAL、NUMERIC</td>\n</tr>\n<tr>\n<td></td>\n<td>CHAR、VARCHAR、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT、ENUM、SET、JSON</td>\n</tr>\n<tr>\n<td></td>\n<td>DATE、TIME、TIMESTAMP、DATETIME、YEAR</td>\n</tr>\n<tr>\n<td></td>\n<td>TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB、GEOMETRY、BINARY、VARBINARY</td>\n</tr>\n<tr>\n<td>暂不支持</td>\n<td>无</td>\n</tr>\n</tbody></table>\n\n              <a id=\"八、脚本示例\" style='display: block; height: 35px;'></a>\n              <h2>\n                八、脚本示例\n              </h2>\n            <p>见项目内<code>chunjun-examples</code>文件夹。</p>\n","tree":[{"label":"ChunJun通用配置详解","category":"file"},{"label":"快速开始","category":"file"},{"label":"ChunJun拓展数据格式","children":[{"label":"protobuf-x","path":"protobuf-x","category":"file"}],"category":"dir"},{"label":"ChunJun连接器","children":[{"label":"binlog","category":"dir","children":[{"label":"binlog-source","path":"binlog-source","category":"file"}]},{"label":"clickhouse","category":"dir","children":[{"label":"clickhouse-lookup","path":"clickhouse-lookup","category":"file"},{"label":"clickhouse-sink","path":"clickhouse-sink","category":"file"},{"label":"clickhouse-source","path":"clickhouse-source","category":"file"}]},{"label":"db2","category":"dir","children":[{"label":"db2-lookup","path":"db2-lookup","category":"file"},{"label":"db2-sink","path":"db2-sink","category":"file"},{"label":"db2-source","path":"db2-source","category":"file"}]},{"label":"dm","category":"dir","children":[{"label":"dm-sink","path":"dm-sink","category":"file"},{"label":"dm-source","path":"dm-source","category":"file"}]},{"label":"doris","category":"dir","children":[{"label":"dorisbatch-sink","path":"dorisbatch-sink","category":"file"}]},{"label":"elasticsearch","category":"dir","children":[{"label":"es7-lookup","path":"es7-lookup","category":"file"},{"label":"es7-sink","path":"es7-sink","category":"file"},{"label":"es7-source","path":"es7-source","category":"file"}]},{"label":"gbase","category":"dir","children":[{"label":"gbase-lookup","path":"gbase-lookup","category":"file"},{"label":"gbase-sink","path":"gbase-sink","category":"file"},{"label":"gbase-source","path":"gbase-source","category":"file"}]},{"label":"greenplum","category":"dir","children":[{"label":"greenplum-sink","path":"greenplum-sink","category":"file"},{"label":"greenplum-source","path":"greenplum-source","category":"file"}]},{"label":"hbase","category":"dir","children":[{"label":"hbase-lookup","path":"hbase-lookup","category":"file"},{"label":"hbase-sink","path":"hbase-sink","category":"file"},{"label":"hbase-source","path":"hbase-source","category":"file"}]},{"label":"hdfs","category":"dir","children":[{"label":"hdfs-sink","path":"hdfs-sink","category":"file"},{"label":"hdfs-source","path":"hdfs-source","category":"file"}]},{"label":"hive","category":"dir","children":[{"label":"hive-lookup","path":"hive-lookup","category":"file"},{"label":"hive-sink","path":"hive-sink","category":"file"}]},{"label":"influxdb","category":"dir","children":[{"label":"influxdb-sink","path":"influxdb-sink","category":"file"},{"label":"influxdb-source","path":"influxdb-source","category":"file"}]},{"label":"kafka","category":"dir","children":[{"label":"kafka-sink","path":"kafka-sink","category":"file"},{"label":"kafka-source","path":"kafka-source","category":"file"}]},{"label":"kingbase","category":"dir","children":[{"label":"kingbase-sink","path":"kingbase-sink","category":"file"},{"label":"kingbase-source","path":"kingbase-source","category":"file"}]},{"label":"kudu","category":"dir","children":[{"label":"kudu-lookup","path":"kudu-lookup","category":"file"},{"label":"kudu-sink","path":"kudu-sink","category":"file"},{"label":"kudu-source","path":"kudu-source","category":"file"}]},{"label":"logminer","category":"dir","children":[{"label":"LogMiner-source","path":"LogMiner-source","category":"file"},{"label":"LogMiner原理","path":"LogMiner原理","category":"file"},{"label":"LogMiner配置","path":"LogMiner配置","category":"file"}]},{"label":"mongodb","category":"dir","children":[{"label":"mongodb-lookup","path":"mongodb-lookup","category":"file"},{"label":"mongodb-sink","path":"mongodb-sink","category":"file"},{"label":"mongodb-source","path":"mongodb-source","category":"file"}]},{"label":"mysql","category":"dir","children":[{"label":"mysql-lookup","path":"mysql-lookup","category":"file"},{"label":"mysql-sink","path":"mysql-sink","category":"file"},{"label":"mysql-source","path":"mysql-source","category":"file"}]},{"label":"oracle","category":"dir","children":[{"label":"oracle-lookup","path":"oracle-lookup","category":"file"},{"label":"oracle-sink","path":"oracle-sink","category":"file"},{"label":"oracle-source","path":"oracle-source","category":"file"}]},{"label":"pgwal","category":"dir","children":[{"label":"Postgres-CDC","path":"Postgres-CDC","category":"file"}]},{"label":"postgresql","category":"dir","children":[{"label":"postgres-lookup","path":"postgres-lookup","category":"file"},{"label":"postgres-sink","path":"postgres-sink","category":"file"},{"label":"postgres-source","path":"postgres-source","category":"file"}]},{"label":"rocketmq","category":"dir","children":[{"label":"rocketmq-source","path":"rocketmq-source","category":"file"}]},{"label":"saphana","category":"dir","children":[{"label":"saphana-sink","path":"saphana-sink","category":"file"},{"label":"saphana-source","path":"saphana-source","category":"file"}]},{"label":"sqlserver","category":"dir","children":[{"label":"sqlserver-lookup","path":"sqlserver-lookup","category":"file"},{"label":"sqlserver-sink","path":"sqlserver-sink","category":"file"},{"label":"sqlserver-source","path":"sqlserver-source","category":"file"}]},{"label":"sqlservercdc","category":"dir","children":[{"label":"SqlServer CDC实时采集原理","path":"SqlServer CDC实时采集原理","category":"file"},{"label":"SqlServer配置CDC","path":"SqlServer配置CDC","category":"file"},{"label":"SqlserverCDC-source","path":"SqlserverCDC-source","category":"file"}]}],"category":"dir"},{"label":"开发者指南","children":[{"label":"如何提交一个优秀的PR","path":"如何提交一个优秀的PR","category":"file"},{"label":"如何自定义插件","path":"如何自定义插件","category":"file"}],"category":"dir"},{"label":"拓展功能","children":[{"label":"增量同步介绍","path":"增量同步介绍","category":"file"},{"label":"断点续传介绍","path":"断点续传介绍","category":"file"},{"label":"脏数据插件设计","path":"脏数据插件设计","category":"file"}],"category":"dir"}],"toc":[{"text":"Binlog Source","level":1,"id":"3f490434-a276-4475-9e14-c7756f1133f0"},{"text":"一、介绍","level":2,"id":"a811ffcb-d519-4206-981a-499d907e4aa5"},{"text":"二、支持版本","level":2,"id":"3d08d29a-cb7e-4933-b550-16fa39166428"},{"text":"三、插件名称","level":2,"id":"0e309da0-d21b-4efb-8d43-ce8fe8bac740"},{"text":"四、数据库配置","level":2,"id":"d6ec1144-52b8-48f2-a09f-0c9177a0b175"},{"text":"1、修改配置文件","level":3,"id":"9041bb7f-f45a-456d-842b-ebd52bee1249"},{"text":"2、添加权限","level":3,"id":"8b478c3b-d771-4048-a80d-0227be0ae442"},{"text":"五、参数说明","level":2,"id":"d6a81614-ab2a-470e-abca-c45540ebd3d7"},{"text":"1、Sync","level":3,"id":"51efdb5b-5c4a-4a34-936d-ea71b8c5d00c"},{"text":"<strong>jdbcUrl</strong>","level":2,"id":"a55b271c-7fb6-4898-8153-46be818627fd"},{"text":"2、SQL","level":3,"id":"fb512ea7-6bfc-46eb-98f8-a638d4bed7df"},{"text":"六、数据结构","level":2,"id":"d47bf716-ad28-435d-ad79-a3aa8528f2b6"},{"text":"七、数据类型","level":2,"id":"6382bcb8-5167-46cc-b79d-62ca786e04d1"},{"text":"八、脚本示例","level":2,"id":"b2cb02df-d6c8-473e-bc35-72882a0e86a1"}]},"__N_SSG":true}