{"componentChunkName":"component---src-pages-documents-markdown-remark-parent-file-name-js","path":"/documents/quickstart/","result":{"data":{"markdownRemark":{"html":"<h2>下载代码</h2>\n<p>1.使用git工具把项目clone到本地</p>\n<pre><code>git clone https://github.com/DTStack/chunjun.git\r\ncd chunjun\n</code></pre>\n<h2>编译插件</h2>\n<p>在chunjun home目录下执行</p>\n<pre><code class=\"language-bash\">mvn clean package -DskipTests \n</code></pre>\n<p>或者执行</p>\n<pre><code class=\"language-bash\">sh build/build.sh\n</code></pre>\n<h2>常见问题</h2>\n<h3>1.编译找不到DB2、达梦、gbase、ojdbc8等驱动包</h3>\n<p>解决办法：在$CHUNJUN_HOME/jars目录下有这些驱动包，可以手动安装，也可以使用插件提供的脚本安装：</p>\n<pre><code class=\"language-bash\">## windows平台\r\n./$CHUNJUN_HOME/bin/install_jars.bat\r\n\r\n## unix平台\r\n./$CHUNJUN_HOME/bin/install_jars.sh\n</code></pre>\n<h2>运行任务</h2>\n<p><strong>NOTE:项目中的chunjun-examples模块下提供了大量 <a href=\"chunjun-examples/json\">数据同步案例</a> 和 <a href=\"chunjun-examples/sql\">SQL案例</a></strong></p>\n<h4>数据同步任务</h4>\n<p>首先准备要运行的任务json，这里以stream插件为例(<strong><code>chunjun-examples</code>文件夹下有大量案例</strong>)：</p>\n<pre><code class=\"language-json\">{\r\n  \"job\": {\r\n    \"content\": [\r\n      {\r\n        \"reader\": {\r\n          \"parameter\": {\r\n            \"column\": [\r\n              {\r\n                \"name\": \"id\",\r\n                \"type\": \"id\"\r\n              },\r\n              {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n              },\r\n              {\r\n                \"name\": \"content\",\r\n                \"type\": \"string\"\r\n              }\r\n            ],\r\n            \"sliceRecordCount\": [\"30\"],\r\n            \"permitsPerSecond\": 1\r\n          },\r\n          \"table\": {\r\n            \"tableName\": \"sourceTable\"\r\n          },\r\n          \"name\": \"streamreader\"\r\n        },\r\n        \"writer\": {\r\n          \"parameter\": {\r\n            \"column\": [\r\n              {\r\n                \"name\": \"id\",\r\n                \"type\": \"id\"\r\n              },\r\n              {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n              },\r\n              {\r\n                \"name\": \"content\",\r\n                \"type\": \"timestamp\"\r\n              }\r\n            ],\r\n            \"print\": true\r\n          },\r\n          \"table\": {\r\n            \"tableName\": \"sinkTable\"\r\n          },\r\n          \"name\": \"streamwriter\"\r\n        },\r\n        \"transformer\": {\r\n          \"transformSql\": \"select id,name, NOW() from sourceTable where CHAR_LENGTH(name) &#x3C; 50 and CHAR_LENGTH(content) &#x3C; 50\"\r\n        }\r\n      }\r\n    ],\r\n    \"setting\": {\r\n      \"errorLimit\": {\r\n        \"record\": 100\r\n      },\r\n      \"speed\": {\r\n        \"bytes\": 0,\r\n        \"channel\": 1,\r\n        \"readerChannel\": 1,\r\n        \"writerChannel\": 1\r\n      }\r\n    }\r\n  }\r\n}\n</code></pre>\n<h4>flinksql任务</h4>\n<p><em><strong>NOTE：ChunJun和flinkSql connector<a href=\"docs/conectorShare.md\">共用</a></strong></em><br /><br />\r\n或者准备要运行的flinksql任务，这里以stream插件为例(<strong><code>chunjun-examples</code>文件夹下有大量案例</strong>)：</p>\n<pre><code class=\"language-sql\">CREATE TABLE source\r\n(\r\n    id        INT,\r\n    name      STRING,\r\n    money     DECIMAL(32, 2),\r\n    dateone   timestamp,\r\n    age       bigint,\r\n    datethree timestamp,\r\n    datesix   timestamp(6),\r\n    datenigth timestamp(9),\r\n    dtdate    date,\r\n    dttime    time\r\n) WITH (\r\n      'connector' = 'stream-x',\r\n      'number-of-rows' = '10', -- 输入条数，默认无限\r\n      'rows-per-second' = '1' -- 每秒输入条数，默认不限制\r\n      );\r\n\r\nCREATE TABLE sink\r\n(\r\n    id        INT,\r\n    name      STRING,\r\n    money     DECIMAL(32, 2),\r\n    dateone   timestamp,\r\n    age       bigint,\r\n    datethree timestamp,\r\n    datesix   timestamp(6),\r\n    datenigth timestamp(9),\r\n    dtdate    date,\r\n    dttime    time\r\n) WITH (\r\n      'connector' = 'stream-x',\r\n      'print' = 'true'\r\n      );\r\n\r\ninsert into sink\r\nselect *\r\nfrom source;\n</code></pre>\n<h3>Local模式运行任务</h3>\n<p>命令模板：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode local \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist \n</code></pre>\n<p>可以在flink-conf.yaml配置文件里配置端口：</p>\n<pre><code class=\"language-bash\">## web服务端口，不指定的话会随机生成一个\r\nrest.bind-port: 8888\n</code></pre>\n<p>使用下面的命令运行任务：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode local \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist \n</code></pre>\n<p>任务运行后可以通过8888端口访问flink界面查看任务运行情况：</p>\n<div align=center>\r\n  <img src=\"images/quick_1.png\" />\r\n</div>\n<h3>Standalone模式运行</h3>\n<p>NOTE:将chunjun-dist目录拷贝到$FLINK_HOME/lib下，并修改$FLINK_HOME/conf/flink-conf.yml中的classloader为classloader.resolve-order: parent-first</p>\n<p>命令模板：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode standalone \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-flinkConfDir $FLINK_HOME/conf \\\r\n\t-confProp \"{\\\"flink.checkpoint.interval\\\":60000}\"\n</code></pre>\n<p>首先启动flink集群：</p>\n<pre><code class=\"language-bash\"># flink集群默认端口是8081\r\n$FLINK_HOME/bin/start-cluster.sh\n</code></pre>\n<p>通过8081端口检查集群是否启动成功</p>\n<div align=center>\r\n  <img src=\"images/quick_2.png\" />\r\n</div>\n<p>把任务提交到集群上运行：</p>\n<pre><code class=\"language-bash\">./bin/start-chunjun \\\r\n\t-mode standalone \\\r\n\t-jobType sync \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-flinkConfDir $FLINK_HOME/conf\n</code></pre>\n<p>在集群上查看任务运行情况</p>\n<div align=center>\r\n  <img src=\"images/quick_1.png\" />\r\n</div>\n<h3>以Yarn Session模式运行任务</h3>\n<p>NOTE:可以先在现在chunjun-clients模块YarnSessionClientUtil类中启动一个session，然后修改$FLINK_HOME/conf/flink-conf.yml中的classloader为classloader.resolve-order: parent-first</p>\n<p>命令示例：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode yarn-session \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-flinkConfDir $FLINK_HOME/conf \\\r\n\t-hadoopConfDir $HADOOP_HOME/etc/hadoop \\\r\n\t-confProp \"{\\\"flink.checkpoint.interval\\\":60000}\"\n</code></pre>\n<p>首先确保yarn集群是可用的，然后手动启动一个yarn session：</p>\n<pre><code class=\"language-bash\">$FLINK_HOME/bin/yarn-session.sh -n 1 -s 1 -jm 1024 -tm 1024\n</code></pre>\n<div align=center>\r\n  <img src=\"images/quick_4.png\" />\r\n</div>\n<div align=center>\r\n  <img src=\"images/quick_2.png\" />\r\n</div>\n<p>把任务提交到这个yarn session上：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode yarn-session \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-flinkConfDir $FLINK_HOME/conf \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-hadoopConfDir $HADOOP_HOME/etc/hadoop\n</code></pre>\n<p>然后在flink界面查看任务运行情况：</p>\n<div align=center>\r\n  <img src=\"images/quick_1.png\" />\r\n</div>\n<h3>以Yarn Perjob模式运行任务</h3>\n<p>命令示例：</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode yarn-per-job \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-flinkConfDir $FLINK_HOME/conf \\\r\n\t-hadoopConfDir $HADOOP_HOME/etc/hadoop \\\r\n\t-flinkLibDir $FLINK_HOME/lib \\\r\n\t-confProp \"{\\\"flink.checkpoint.interval\\\":60000,\\\"yarn.application.queue\\\":\\\"default\\\"}\" \\ \n</code></pre>\n<p>首先确保yarn集群是可用的，启动一个Yarn Application运行任务:</p>\n<pre><code class=\"language-bash\">bin/start-chunjun \\\r\n\t-mode yarn-per-job \\\r\n\t-jobType sync \\\r\n\t-job chunjun-examples/json/stream/stream.json \\\r\n\t-chunjunDistDir chunjun-dist  \\\r\n\t-hadoopConfDir $HADOOP_HOME/etc/hadoop \\\r\n\t-flinkLibDir $FLINK_HOME/lib \\\n</code></pre>\n<p>然后在集群上查看任务运行情况</p>\n<div align=center>\r\n  <img src=\"images/quick_7.png\" />\r\n</div>\n<div align=center>\r\n  <img src=\"images/quick_1.png\" />\r\n</div>\n<h3>Kubernetes Session模式运行任务</h3>\n<p>命令示例：</p>\n<pre><code>bin/start-chunjun \\\r\n    -mode kubernetes-session \\\r\n    -jobType sync \\\r\n    -job chunjun-examples/json/stream/stream.json \\\r\n    -jobName kubernetes-job \\\r\n    -jobType sync \\\r\n    -chunjunDistDir chunjun-dist  \\\r\n    -flinkLibDir $FLINK_HOME/lib \\\r\n    -flinkConfDir $FLINK_HOME/conf \\\r\n    -confProp \"{\\\"kubernetes.config.file\\\":\\\"${kubernetes_config_path}\\\",\\\"kubernetes.cluster-id\\\":\\\"${cluster_id}\\\",\\\"kubernetes.namespace\\\":\\\"${namespace}\\\"}\"\n</code></pre>\n<p>需要提前手动在kubernetes上启动kubernetes session</p>\n<pre><code>$FLINK_HOME/bin/kubernetes-session.sh -Dkubernetes.cluster-id=flink-session-test -Dclassloader.resolve-order=parent-first -Dkubernetes.container.image=${image_name}\n</code></pre>\n<p>注意：需要提前构建chunjun镜像\r\n<a href=\"chunjun-docker/docker/README.md\">chunjun镜像构建说明</a></p>\n<h3>Kubernetes Application模式运行任务</h3>\n<p>命令示例：</p>\n<pre><code>bin/start-chunjun \\\r\n    -mode kubernetes-application \\\r\n    -jobType sync \\\r\n    -job chunjun-examples/json/stream/stream.json \\\r\n    -jobName kubernetes-job \\\r\n    -jobType sync \\\r\n    -chunjunDistDir chunjun-dist  \\\r\n    -remotePluginPath /opt/chunjun-dist \\\r\n    -pluginLoadMode classpath \\\r\n    -flinkLibDir $FLINK_HOME/lib \\\r\n    -flinkConfDir $FLINK_HOME/conf \\\r\n    -confProp \"{\\\"kubernetes.config.file\\\":\\\"${kubernetes_config_path}\\\",\\\"kubernetes.container.image\\\":\\\"${image_name}\\\",\\\"kubernetes.namespace\\\":\\\"${namespace}\\\"}\"\n</code></pre>\n<p>注意：需要提前构建chunjun镜像\r\n<a href=\"chunjun-docker/docker/README.md\">chunjun镜像构建说明</a></p>\n<h2>参数说明</h2>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>可选值</th>\n<th>是否必填</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>mode</strong></td>\n<td>执行模式，也就是flink集群的工作模式</td>\n<td>1.<strong>local</strong>: 本地模式<br />2.<strong>standalone</strong>: 独立部署模式的flink集群<br />3.<strong>yarn-session</strong>: yarn-session模式的flink集群，需要提前在yarn上启动一个flink session，使用默认名称\"Flink session cluster\"<br />4.<strong>yarn-per-job</strong>: yarn模式的flink集群，单独为当前任务启动一个flink session，使用默认名称\"Flink per-job cluster\"<br />5.<strong>kubernetes-session</strong>: kubernetes session模式提交任务，需要提前在kubernetes上启动flink session <br />6.<strong>kubernetes-application</strong>: kubernetes run application模式提交任务</td>\n<td>否</td>\n<td>local</td>\n</tr>\n<tr>\n<td><strong>jobType</strong></td>\n<td>任务类型</td>\n<td>1.<strong>sync</strong>:数据同步任务<br />    2.<strong>sql</strong>:flinksql任务</td>\n<td>是</td>\n<td>无</td>\n</tr>\n<tr>\n<td><strong>job</strong></td>\n<td>同步、flinksql任务描述文件的存放路径；该描述文件中使用json、sql存放任务信息</td>\n<td>无</td>\n<td>是</td>\n<td>无</td>\n</tr>\n<tr>\n<td><strong>jobName</strong></td>\n<td>任务名称</td>\n<td>无</td>\n<td>否</td>\n<td>Flink Job</td>\n</tr>\n<tr>\n<td><strong>chunjunDistDir</strong></td>\n<td>插件根目录地址，也就是打包后产生的chunjun-dist目录。</td>\n<td>无</td>\n<td>否</td>\n<td>$CHUNJUN_HOME/chunjun-dist</td>\n</tr>\n<tr>\n<td><strong>flinkConfDir</strong></td>\n<td>flink配置文件所在的目录（单机模式下不需要）</td>\n<td>$FLINK_HOME/conf</td>\n<td>否</td>\n<td>$FLINK_HOME/conf</td>\n</tr>\n<tr>\n<td><strong>flinkLibDir</strong></td>\n<td>flink lib所在的目录（单机模式下不需要），如/opt/dtstack/flink-1.10.1/lib</td>\n<td>$FLINK_HOME/lib</td>\n<td>否</td>\n<td>$FLINK_HOME/lib</td>\n</tr>\n<tr>\n<td><strong>hadoopConfDir</strong></td>\n<td>Hadoop配置文件（包括hdfs和yarn）所在的目录</td>\n<td>$HADOOP_HOME/etc/hadoop</td>\n<td>否</td>\n<td>$HADOOP_HOME/etc/hadoop</td>\n</tr>\n<tr>\n<td><strong>pluginLoadMode</strong></td>\n<td>yarn session模式插件加载方式</td>\n<td>1.<strong>classpath</strong>：提交任务时不上传插件包，需要在yarn-node节点chunjun-dist目录下部署插件包，但任务启动速度较快，session模式建议使用<br />2.<strong>shipfile</strong>：提交任务时上传chunjun-dist目录下部署插件包的插件包，yarn-node节点不需要部署插件包，任务启动速度取决于插件包的大小及网络环境，yarnPer模式建议使用</td>\n<td>否</td>\n<td>shipfile</td>\n</tr>\n<tr>\n<td><strong>confProp</strong></td>\n<td>flink官方所有配置参数</td>\n<td></td>\n<td>否</td>\n<td>无</td>\n</tr>\n<tr>\n<td><strong>p</strong></td>\n<td>自定义入参，用于替换脚本中的占位符，如脚本中存在占位符${pt1},${pt2}，则该参数可配置为pt1=20200101,pt2=20200102</td>\n<td></td>\n<td>否</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>","id":"ec58a4be-07e6-5912-9cd1-a8dde394fbd5","parent":{"id":"6a0edac9-7160-56be-80f7-b478ed896bc0","name":"quickstart","modifiedTime":"2022-06-07T13:14:12.085Z","ino":3377699721739132}}},"pageContext":{"id":"ec58a4be-07e6-5912-9cd1-a8dde394fbd5","parent__name":"quickstart","__params":{"parent__name":"quickstart"}}},"staticQueryHashes":["527733040"]}